@model UI.ScientificResearch.Models.ProjectRegistrationViewModel
@{
    Layout = "~/Views/Shared/_PopUpLayout.cshtml";
}
@if (ViewBag.SendUpSuccess == true)
{
    <script type="text/javascript">
    //上报成功的提示
    $(function(){
        var sendupsuccess = "@ViewBag.SendUpSuccess";
        if (sendupsuccess == "True")
        {
            parent.location.reload();
            alert("保存成功！");
        }
    });
    </script>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <table class="table">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.ApplicationId)
            @Html.HiddenFor(model => model.OperatorId)
            @Html.HiddenFor(model => model.OperatorName)
            @Html.HiddenFor(model => model.CreatedTime)
            @Html.HiddenFor(model => model.BidSectionId)

            <tr>
                <td>
                    @Html.LabelFor(model => model.CompanyName)
                </td>
                <td>
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.ContactName)
                </td>
                <td>
                    @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>  @Html.LabelFor(model => model.Phone) </td>
                <td>
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>  @Html.LabelFor(model => model.Email) </td>
                <td>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td> @Html.LabelFor(model => model.BidSection) </td>
                <td>
                    @Html.EditorFor(model => model.BidSection, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BidSection, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>   @Html.LabelFor(model => model.IsSubmitRegistrationFee) </td>
                <td>
                    @Html.EditorFor(model => model.IsSubmitRegistrationFee, new { htmlAttributes = new { @style = "width:150px", @class = "checkbox", @readOnly = "readonly", @onclick = "return false" } })
                    @Html.ValidationMessageFor(model => model.IsSubmitRegistrationFee, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>   @Html.LabelFor(model => model.RegistrationFee) </td>
                <td>
                    @*@Html.EditorFor(model => model.RegistrationFee, new { htmlAttributes = new { @style = "width:150px" } })*@
                    <input type="text" id="RegistrationFee" name="RegistrationFee" readonly="readonly" style="width:150px" value="@Model.RegistrationFee" onkeypress="var k=event.keyCode; return (k&gt;=48&amp;&amp;k&lt;=57)||k==46" ondragenter="return false" onpaste="return !/D/.test(clipboardData.getData('text'))" />
                    @Html.ValidationMessageFor(model => model.RegistrationFee, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>   @Html.LabelFor(model => model.IsSubmitBidBondFee) </td>
                <td>
                    @Html.EditorFor(model => model.IsSubmitBidBondFee, new { htmlAttributes = new { @style = "width:150px", @class = "checkbox", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.IsSubmitBidBondFee, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>   @Html.LabelFor(model => model.BidBondFee) </td>
                <td>
                    @*@Html.EditorFor(model => model.RegistrationFee, new { htmlAttributes = new { @style = "width:150px" } })*@
                    <input type="text" id="BidBondFee" name="BidBondFee" style="width:150px" value="@Model.BidBondFee" onkeypress="var k=event.keyCode; return (k&gt;=48&amp;&amp;k&lt;=57)||k==46" ondragenter="return false" onpaste="return !/D/.test(clipboardData.getData('text'))" />
                    @Html.ValidationMessageFor(model => model.BidBondFee, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>   @Html.LabelFor(model => model.IsRefundBidBondFee) </td>
                <td>
                    @Html.EditorFor(model => model.IsRefundBidBondFee, new { htmlAttributes = new { @style = "width:150px", @class = "checkbox", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.IsRefundBidBondFee, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>  @Html.LabelFor(model => model.Remark) </td>
                <td>
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>  @Html.LabelFor(model => model.RegisterTime) </td>
                <td>
                    @Html.EditorFor(model => model.RegisterTime, new { htmlAttributes = new { @style = "width:150px", @readOnly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.RegisterTime, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td colspan="2">
                    <input type="submit" value="保存" name="Save" class="btn btn-default" />
                </td>
            </tr>
        </table>
    }
    <script>
        $(document).ready(function () {
            $("#RegisterTime").kendoDatePicker({
                format: "yyyy-MM-dd"
            });
            $("#RegisterTime").attr("readonly", true);
        });
    </script>
    <script type="text/javascript">
    $(function () {
        $("input[name='Reported'],input[name='Save'] ").click(function () {
            var errorMessage="";
            if ($("#CompanyName").val().trim() == "") {
                errorMessage = errorMessage + "公司名称不能为空！";
            }
            if ($("#ContactName").val().trim() == "") {
                errorMessage = errorMessage + "联系人不能为空！";
            }
            if ($("#Phone").val().trim() == "") {
                errorMessage = errorMessage + "联系电话不能为空！";
            }
            if ($("#Email").val().trim() == "") {
                errorMessage = errorMessage + "邮箱地址不能为空！";
            }
            if (errorMessage == "") {

            }
            else {
                alert(errorMessage);
                return false;
            }
        });
    });
    //上报成功的提示
    $(function(){
        var sendupsuccess = "@ViewBag.SendUpSuccess";
        if (sendupsuccess == "True")
        {
            alert("保存成功！");
            parent.location.reload();
        }
    });
    </script>

}