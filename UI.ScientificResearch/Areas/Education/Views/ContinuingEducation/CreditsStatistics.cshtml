@model IEnumerable<ScientificResearch.ViewModel.ContinuingEducationRecordViewModel>

<div id="searchdata">
    <label for="start">开始时间:</label>
    <input id="startTime" name="startTime" value="" style="width: 150px " />&nbsp;
    <label for="end">结束时间:</label>
    <input id="endTime" name="endTime" value="" style="width: 150px" />&nbsp;
    <label for="name">姓名:</label>
    <input id="Name" name="Name" value="" style="width: 150px" />&nbsp;
    <input type="submit" value="查询" onclick="searchrightdataoffundslist()" />
</div>

<div id="bigfundsgrid" class="k-content">
    <div id="fundsGrid">

    </div>
    <script>
        $(function () {
            searchrightdataoffundslist();
        });

        function searchrightdataoffundslist() {
            var searchitem4 = $("#Name").val();
            var searchitem5 = $("#startTime").val();
            var searchitem6 = $("#endTime").val();
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        type: "post",
                        url: "/Education/ContinuingEducation/CreditsStatisticsList?Name=" +
                        encodeURI(searchitem4) + "&startTime=" + encodeURI(searchitem5) + "&endTime=" +
                        encodeURI(searchitem6) + "",
                        dataType: "json",
                        contentType: "application/json",
                    },

                    destroy: {
                        type: "post",
                        url: "/Education/ContinuingEducation/DeleteApplicationListByModelId",
                        dataType: "json",
                        complete: function (e) {
                            $("#fundsGrid").data("kendoGrid").dataSource.read();
                        }
                    },
                    parameterMap: function (options, operation) {
                        if (operation == "read") {
                            var parameter = {
                                page: options.page,
                                pageSize: options.pageSize
                            };
                            return kendo.stringify(parameter);
                        }
                        if (operation == "destroy") {
                            options.action = operation;
                            return { modelId: kendo.stringify(options.models[options.models.length - 1].ID) };
                        }
                    },
                },

                batch: true,
                pageSize: 10,
                schema: {
                    model: {
                        //删除时必须有
                        id: "ID"
                    },
                    data: function (d) {
                        for (var i = 0; i < d.data.length; i++) {
                            ////将json时间转换
                            //var birthdayMilliseconds = eval('new ' + d.data[i].TimeStr.replace('/', '', 'g').replace('/', '', 'g'));
                            //var birthday = birthdayMilliseconds.toLocaleDateString() + " " + birthdayMilliseconds.toLocaleTimeString();
                            //d.data[i].TimeStr = birthday;
                        }
                        return d.data;

                    },
                    total: function (d) {
                        return d.total;
                    }
                },
                serverPaging: true,
            });

            $("#fundsGrid").kendoGrid({
                dataSource: dataSource,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5,
                    messages: {
                        display: "显示{0}-{1}条，共{2}条",
                        empty: "没有数据",
                        page: "页",
                        of: "/ {0}",
                        itemsPerPage: "条/页",
                        first: "第一页",
                        previous: "前一页",
                        next: "下一页",
                        last: "最后一页",
                        refresh: "刷新"
                    }
                },
                //过滤条件中文化
                filterable: {
                    operators: {
                        string: {
                            eq: "相同",
                            neq: "不同",
                            startswith: "开始是",
                            contains: "包含",
                            doesnotcontain: "不包含",
                            endswith: "结尾"
                        }
                    },
                    messages: {
                        info: "过滤条件: ",//顶端提示信息
                        and: "和",
                        or: "或",
                        filter: "应用过滤条件",//过滤按钮
                        clear: "清除过滤条件",//清空按钮
                    }
                },
                columns: [
                {
                    field: "ID",
                    title: "序号",
                    hidden: true,
                },

                {
                    field: "UserName",
                    title: "姓名",
                    width: "20%"
                },
                 {
                     field: "Department",
                     title: "科室",
                     width: "13%"
                 },
                  {
                      field: "Credit",
                      title: "学分",
                      width: "13%"
                  },
                {
                    field: "UserDegree",
                    title: "学历",
                    width: "10%"
                },

                //{
                //    command:
                //    [{ name: "destroy", text: "删除", width: "10%" }]
                //}
                ],
                editable: {
                    //mode: "inline",
                    mode: "popup"
                },
                selectable: true,
                change: onChange,
            });
        };
        function onChange(arg) {
            var selected = $.map(this.select(), function (item) {
                OpenMaxWindow(item.cells[0].outerText);

            });

            //alert(selected);
            //kendoConsole.log("Selected: " + selected.length + " item(s), [" + selected.join(", ") + "]");
        }
    </script>


</div>




   @*<table width="100%" border="0" cellspacing="0" cellpadding="0" class="table table-striped table-bordered table-hover">
    <tr>
       
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Department)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Credit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreditType)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.IsGranted)
        </th>

    </tr>

    @foreach (var item in Model)
    {
        <tr>
           
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Credit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreditLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreditType)
            </td>
            @if (item.IsGranted == false)
            {
                <td>
                    未授予学分
                </td>
            }
            else if (item.IsGranted == true)
            {
                <td>已授予学分</td>
            }

            else
            {
                <td></td>
            }

        </tr>
    }
</table>*@

<script>
    $(document).ready(function () {
        function startChange() {
            var startDate = start.value(),
            endDate = end.value();

            if (startDate) {
                startDate = new Date(startDate);
                startDate.setDate(startDate.getDate());
                end.min(startDate);
            } else if (endDate) {
                start.max(new Date(endDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        function endChange() {
            var endDate = end.value(),
            startDate = start.value();

            if (endDate) {
                endDate = new Date(endDate);
                endDate.setDate(endDate.getDate());
                start.max(endDate);
            } else if (startDate) {
                end.min(new Date(startDate));
            } else {
                endDate = new Date();
                start.max(endDate);
                end.min(endDate);
            }
        }

        var start = $("#startTime").kendoDatePicker({
            change: startChange
        }).data("kendoDatePicker");

        var end = $("#endTime").kendoDatePicker({
            change: endChange
        }).data("kendoDatePicker");
        $("#startTime").attr("readonly", true);
        $("#endTime").attr("readonly", true);
        start.max(end.value());
        end.min(start.value());
    });
</script>